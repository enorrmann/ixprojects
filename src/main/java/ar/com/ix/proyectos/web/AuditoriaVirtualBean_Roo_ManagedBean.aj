// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.com.ix.proyectos.web;

import ar.com.ix.proyectos.model.AuditoriaVirtual;
import ar.com.ix.proyectos.web.AuditoriaVirtualBean;
import ar.com.ix.proyectos.web.util.MessageFactory;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.html.HtmlOutputText;
import javax.faces.component.html.HtmlPanelGrid;
import javax.faces.context.FacesContext;
import org.primefaces.component.inputtext.InputText;
import org.primefaces.component.message.Message;
import org.primefaces.component.outputlabel.OutputLabel;
import org.primefaces.context.RequestContext;
import org.primefaces.event.CloseEvent;

privileged aspect AuditoriaVirtualBean_Roo_ManagedBean {
    
    declare @type: AuditoriaVirtualBean: @ManagedBean(name = "auditoriaVirtualBean");
    
    declare @type: AuditoriaVirtualBean: @SessionScoped;
    
    private String AuditoriaVirtualBean.name = "AuditoriaVirtuals";
    
    private AuditoriaVirtual AuditoriaVirtualBean.auditoriaVirtual;
    
    private List<AuditoriaVirtual> AuditoriaVirtualBean.allAuditoriaVirtuals;
    
    private boolean AuditoriaVirtualBean.dataVisible = false;
    
    private List<String> AuditoriaVirtualBean.columns;
    
    private HtmlPanelGrid AuditoriaVirtualBean.createPanelGrid;
    
    private HtmlPanelGrid AuditoriaVirtualBean.editPanelGrid;
    
    private HtmlPanelGrid AuditoriaVirtualBean.viewPanelGrid;
    
    private boolean AuditoriaVirtualBean.createDialogVisible = false;
    
    @PostConstruct
    public void AuditoriaVirtualBean.init() {
        columns = new ArrayList<String>();
<<<<<<< e9222cde397dd916c096e7da0ff689a1b6ccde96:src/main/java/ar/com/ix/proyectos/web/AuditoriaVirtualBean_Roo_ManagedBean.aj
        columns.add("cliente");
=======
>>>>>>> d5792d9d4574ac035b3fe3896721b6be3153cc01:src/main/java/ar/com/ix/proyectos/web/ProyectoBean_Roo_ManagedBean.aj
        columns.add("codigo");
    }
    
    public String AuditoriaVirtualBean.getName() {
        return name;
    }
    
    public List<String> AuditoriaVirtualBean.getColumns() {
        return columns;
    }
    
    public List<AuditoriaVirtual> AuditoriaVirtualBean.getAllAuditoriaVirtuals() {
        return allAuditoriaVirtuals;
    }
    
    public void AuditoriaVirtualBean.setAllAuditoriaVirtuals(List<AuditoriaVirtual> allAuditoriaVirtuals) {
        this.allAuditoriaVirtuals = allAuditoriaVirtuals;
    }
    
    public String AuditoriaVirtualBean.findAllAuditoriaVirtuals() {
        allAuditoriaVirtuals = AuditoriaVirtual.findAllAuditoriaVirtuals();
        dataVisible = !allAuditoriaVirtuals.isEmpty();
        return null;
    }
    
    public boolean AuditoriaVirtualBean.isDataVisible() {
        return dataVisible;
    }
    
    public void AuditoriaVirtualBean.setDataVisible(boolean dataVisible) {
        this.dataVisible = dataVisible;
    }
    
    public HtmlPanelGrid AuditoriaVirtualBean.getCreatePanelGrid() {
        if (createPanelGrid == null) {
            createPanelGrid = populateCreatePanel();
        }
        return createPanelGrid;
    }
    
    public void AuditoriaVirtualBean.setCreatePanelGrid(HtmlPanelGrid createPanelGrid) {
        this.createPanelGrid = createPanelGrid;
    }
    
    public HtmlPanelGrid AuditoriaVirtualBean.getEditPanelGrid() {
        if (editPanelGrid == null) {
            editPanelGrid = populateEditPanel();
        }
        return editPanelGrid;
    }
    
    public void AuditoriaVirtualBean.setEditPanelGrid(HtmlPanelGrid editPanelGrid) {
        this.editPanelGrid = editPanelGrid;
    }
    
    public HtmlPanelGrid AuditoriaVirtualBean.getViewPanelGrid() {
        return populateViewPanel();
    }
    
    public void AuditoriaVirtualBean.setViewPanelGrid(HtmlPanelGrid viewPanelGrid) {
        this.viewPanelGrid = viewPanelGrid;
    }
    
    public HtmlPanelGrid AuditoriaVirtualBean.populateCreatePanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
<<<<<<< e9222cde397dd916c096e7da0ff689a1b6ccde96:src/main/java/ar/com/ix/proyectos/web/AuditoriaVirtualBean_Roo_ManagedBean.aj
        OutputLabel clienteCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        clienteCreateOutput.setFor("clienteCreateInput");
        clienteCreateOutput.setId("clienteCreateOutput");
        clienteCreateOutput.setValue("Cliente:");
        htmlPanelGrid.getChildren().add(clienteCreateOutput);
        
        InputText clienteCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        clienteCreateInput.setId("clienteCreateInput");
        clienteCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.cliente}", String.class));
        clienteCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(clienteCreateInput);
        
        Message clienteCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        clienteCreateInputMessage.setId("clienteCreateInputMessage");
        clienteCreateInputMessage.setFor("clienteCreateInput");
        clienteCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(clienteCreateInputMessage);
        
=======
>>>>>>> d5792d9d4574ac035b3fe3896721b6be3153cc01:src/main/java/ar/com/ix/proyectos/web/ProyectoBean_Roo_ManagedBean.aj
        OutputLabel codigoCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        codigoCreateOutput.setFor("codigoCreateInput");
        codigoCreateOutput.setId("codigoCreateOutput");
        codigoCreateOutput.setValue("Codigo:");
        htmlPanelGrid.getChildren().add(codigoCreateOutput);
        
        InputText codigoCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        codigoCreateInput.setId("codigoCreateInput");
        codigoCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.codigo}", String.class));
        codigoCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(codigoCreateInput);
        
        Message codigoCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        codigoCreateInputMessage.setId("codigoCreateInputMessage");
        codigoCreateInputMessage.setFor("codigoCreateInput");
        codigoCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(codigoCreateInputMessage);
        
<<<<<<< e9222cde397dd916c096e7da0ff689a1b6ccde96:src/main/java/ar/com/ix/proyectos/web/AuditoriaVirtualBean_Roo_ManagedBean.aj
        OutputLabel fechaDeInicioEstimadaCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        fechaDeInicioEstimadaCreateOutput.setFor("fechaDeInicioEstimadaCreateInput");
        fechaDeInicioEstimadaCreateOutput.setId("fechaDeInicioEstimadaCreateOutput");
        fechaDeInicioEstimadaCreateOutput.setValue("Fecha De Inicio Estimada:");
        htmlPanelGrid.getChildren().add(fechaDeInicioEstimadaCreateOutput);
        
        Calendar fechaDeInicioEstimadaCreateInput = (Calendar) application.createComponent(Calendar.COMPONENT_TYPE);
        fechaDeInicioEstimadaCreateInput.setId("fechaDeInicioEstimadaCreateInput");
        fechaDeInicioEstimadaCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.fechaDeInicioEstimada}", Date.class));
        fechaDeInicioEstimadaCreateInput.setNavigator(true);
        fechaDeInicioEstimadaCreateInput.setEffect("slideDown");
        fechaDeInicioEstimadaCreateInput.setPattern("dd/MM/yyyy");
        fechaDeInicioEstimadaCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(fechaDeInicioEstimadaCreateInput);
        
        Message fechaDeInicioEstimadaCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        fechaDeInicioEstimadaCreateInputMessage.setId("fechaDeInicioEstimadaCreateInputMessage");
        fechaDeInicioEstimadaCreateInputMessage.setFor("fechaDeInicioEstimadaCreateInput");
        fechaDeInicioEstimadaCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(fechaDeInicioEstimadaCreateInputMessage);
        
        OutputLabel fechaDeInicioCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        fechaDeInicioCreateOutput.setFor("fechaDeInicioCreateInput");
        fechaDeInicioCreateOutput.setId("fechaDeInicioCreateOutput");
        fechaDeInicioCreateOutput.setValue("Fecha De Inicio:");
        htmlPanelGrid.getChildren().add(fechaDeInicioCreateOutput);
        
        Calendar fechaDeInicioCreateInput = (Calendar) application.createComponent(Calendar.COMPONENT_TYPE);
        fechaDeInicioCreateInput.setId("fechaDeInicioCreateInput");
        fechaDeInicioCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.fechaDeInicio}", Date.class));
        fechaDeInicioCreateInput.setNavigator(true);
        fechaDeInicioCreateInput.setEffect("slideDown");
        fechaDeInicioCreateInput.setPattern("dd/MM/yyyy");
        fechaDeInicioCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(fechaDeInicioCreateInput);
        
        Message fechaDeInicioCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        fechaDeInicioCreateInputMessage.setId("fechaDeInicioCreateInputMessage");
        fechaDeInicioCreateInputMessage.setFor("fechaDeInicioCreateInput");
        fechaDeInicioCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(fechaDeInicioCreateInputMessage);
        
        OutputLabel fechaDeFinalizacionEstimadaCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        fechaDeFinalizacionEstimadaCreateOutput.setFor("fechaDeFinalizacionEstimadaCreateInput");
        fechaDeFinalizacionEstimadaCreateOutput.setId("fechaDeFinalizacionEstimadaCreateOutput");
        fechaDeFinalizacionEstimadaCreateOutput.setValue("Fecha De Finalizacion Estimada:");
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionEstimadaCreateOutput);
        
        Calendar fechaDeFinalizacionEstimadaCreateInput = (Calendar) application.createComponent(Calendar.COMPONENT_TYPE);
        fechaDeFinalizacionEstimadaCreateInput.setId("fechaDeFinalizacionEstimadaCreateInput");
        fechaDeFinalizacionEstimadaCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.fechaDeFinalizacionEstimada}", Date.class));
        fechaDeFinalizacionEstimadaCreateInput.setNavigator(true);
        fechaDeFinalizacionEstimadaCreateInput.setEffect("slideDown");
        fechaDeFinalizacionEstimadaCreateInput.setPattern("dd/MM/yyyy");
        fechaDeFinalizacionEstimadaCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionEstimadaCreateInput);
        
        Message fechaDeFinalizacionEstimadaCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        fechaDeFinalizacionEstimadaCreateInputMessage.setId("fechaDeFinalizacionEstimadaCreateInputMessage");
        fechaDeFinalizacionEstimadaCreateInputMessage.setFor("fechaDeFinalizacionEstimadaCreateInput");
        fechaDeFinalizacionEstimadaCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionEstimadaCreateInputMessage);
        
        OutputLabel fechaDeFinalizacionCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        fechaDeFinalizacionCreateOutput.setFor("fechaDeFinalizacionCreateInput");
        fechaDeFinalizacionCreateOutput.setId("fechaDeFinalizacionCreateOutput");
        fechaDeFinalizacionCreateOutput.setValue("Fecha De Finalizacion:");
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionCreateOutput);
        
        Calendar fechaDeFinalizacionCreateInput = (Calendar) application.createComponent(Calendar.COMPONENT_TYPE);
        fechaDeFinalizacionCreateInput.setId("fechaDeFinalizacionCreateInput");
        fechaDeFinalizacionCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.fechaDeFinalizacion}", Date.class));
        fechaDeFinalizacionCreateInput.setNavigator(true);
        fechaDeFinalizacionCreateInput.setEffect("slideDown");
        fechaDeFinalizacionCreateInput.setPattern("dd/MM/yyyy");
        fechaDeFinalizacionCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionCreateInput);
        
        Message fechaDeFinalizacionCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        fechaDeFinalizacionCreateInputMessage.setId("fechaDeFinalizacionCreateInputMessage");
        fechaDeFinalizacionCreateInputMessage.setFor("fechaDeFinalizacionCreateInput");
        fechaDeFinalizacionCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionCreateInputMessage);
        
        OutputLabel ingenieriaCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        ingenieriaCreateOutput.setFor("ingenieriaCreateInput");
        ingenieriaCreateOutput.setId("ingenieriaCreateOutput");
        ingenieriaCreateOutput.setValue("Ingenieria:");
        htmlPanelGrid.getChildren().add(ingenieriaCreateOutput);
        
        InputText ingenieriaCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        ingenieriaCreateInput.setId("ingenieriaCreateInput");
        ingenieriaCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.ingenieria}", String.class));
        ingenieriaCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(ingenieriaCreateInput);
        
        Message ingenieriaCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        ingenieriaCreateInputMessage.setId("ingenieriaCreateInputMessage");
        ingenieriaCreateInputMessage.setFor("ingenieriaCreateInput");
        ingenieriaCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(ingenieriaCreateInputMessage);
        
        OutputLabel cronogramaCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        cronogramaCreateOutput.setFor("cronogramaCreateInput");
        cronogramaCreateOutput.setId("cronogramaCreateOutput");
        cronogramaCreateOutput.setValue("Cronograma:");
        htmlPanelGrid.getChildren().add(cronogramaCreateOutput);
        
        InputText cronogramaCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        cronogramaCreateInput.setId("cronogramaCreateInput");
        cronogramaCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.cronograma}", String.class));
        cronogramaCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(cronogramaCreateInput);
        
        Message cronogramaCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        cronogramaCreateInputMessage.setId("cronogramaCreateInputMessage");
        cronogramaCreateInputMessage.setFor("cronogramaCreateInput");
        cronogramaCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(cronogramaCreateInputMessage);
        
        OutputLabel informacionRecibidaCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        informacionRecibidaCreateOutput.setFor("informacionRecibidaCreateInput");
        informacionRecibidaCreateOutput.setId("informacionRecibidaCreateOutput");
        informacionRecibidaCreateOutput.setValue("Informacion Recibida:");
        htmlPanelGrid.getChildren().add(informacionRecibidaCreateOutput);
        
        InputText informacionRecibidaCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        informacionRecibidaCreateInput.setId("informacionRecibidaCreateInput");
        informacionRecibidaCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.informacionRecibida}", String.class));
        informacionRecibidaCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(informacionRecibidaCreateInput);
        
        Message informacionRecibidaCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        informacionRecibidaCreateInputMessage.setId("informacionRecibidaCreateInputMessage");
        informacionRecibidaCreateInputMessage.setFor("informacionRecibidaCreateInput");
        informacionRecibidaCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(informacionRecibidaCreateInputMessage);
        
        OutputLabel auditoriaVirtualCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        auditoriaVirtualCreateOutput.setFor("auditoriaVirtualCreateInput");
        auditoriaVirtualCreateOutput.setId("auditoriaVirtualCreateOutput");
        auditoriaVirtualCreateOutput.setValue("Auditoria Virtual:");
        htmlPanelGrid.getChildren().add(auditoriaVirtualCreateOutput);
        
        InputText auditoriaVirtualCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        auditoriaVirtualCreateInput.setId("auditoriaVirtualCreateInput");
        auditoriaVirtualCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.auditoriaVirtual}", String.class));
        auditoriaVirtualCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(auditoriaVirtualCreateInput);
        
        Message auditoriaVirtualCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        auditoriaVirtualCreateInputMessage.setId("auditoriaVirtualCreateInputMessage");
        auditoriaVirtualCreateInputMessage.setFor("auditoriaVirtualCreateInput");
        auditoriaVirtualCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(auditoriaVirtualCreateInputMessage);
        
        OutputLabel correccionesDeAuditoriaCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        correccionesDeAuditoriaCreateOutput.setFor("correccionesDeAuditoriaCreateInput");
        correccionesDeAuditoriaCreateOutput.setId("correccionesDeAuditoriaCreateOutput");
        correccionesDeAuditoriaCreateOutput.setValue("Correcciones De Auditoria:");
        htmlPanelGrid.getChildren().add(correccionesDeAuditoriaCreateOutput);
        
        InputText correccionesDeAuditoriaCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        correccionesDeAuditoriaCreateInput.setId("correccionesDeAuditoriaCreateInput");
        correccionesDeAuditoriaCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.correccionesDeAuditoria}", String.class));
        correccionesDeAuditoriaCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(correccionesDeAuditoriaCreateInput);
        
        Message correccionesDeAuditoriaCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        correccionesDeAuditoriaCreateInputMessage.setId("correccionesDeAuditoriaCreateInputMessage");
        correccionesDeAuditoriaCreateInputMessage.setFor("correccionesDeAuditoriaCreateInput");
        correccionesDeAuditoriaCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(correccionesDeAuditoriaCreateInputMessage);
        
        OutputLabel auditoriaCorregidaCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        auditoriaCorregidaCreateOutput.setFor("auditoriaCorregidaCreateInput");
        auditoriaCorregidaCreateOutput.setId("auditoriaCorregidaCreateOutput");
        auditoriaCorregidaCreateOutput.setValue("Auditoria Corregida:");
        htmlPanelGrid.getChildren().add(auditoriaCorregidaCreateOutput);
        
        InputText auditoriaCorregidaCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        auditoriaCorregidaCreateInput.setId("auditoriaCorregidaCreateInput");
        auditoriaCorregidaCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.auditoriaCorregida}", String.class));
        auditoriaCorregidaCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(auditoriaCorregidaCreateInput);
        
        Message auditoriaCorregidaCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        auditoriaCorregidaCreateInputMessage.setId("auditoriaCorregidaCreateInputMessage");
        auditoriaCorregidaCreateInputMessage.setFor("auditoriaCorregidaCreateInput");
        auditoriaCorregidaCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(auditoriaCorregidaCreateInputMessage);
        
        OutputLabel comentariosYObservacionesCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        comentariosYObservacionesCreateOutput.setFor("comentariosYObservacionesCreateInput");
        comentariosYObservacionesCreateOutput.setId("comentariosYObservacionesCreateOutput");
        comentariosYObservacionesCreateOutput.setValue("Comentarios Y Observaciones:");
        htmlPanelGrid.getChildren().add(comentariosYObservacionesCreateOutput);
        
        InputText comentariosYObservacionesCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        comentariosYObservacionesCreateInput.setId("comentariosYObservacionesCreateInput");
        comentariosYObservacionesCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.comentariosYObservaciones}", String.class));
        comentariosYObservacionesCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(comentariosYObservacionesCreateInput);
        
        Message comentariosYObservacionesCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        comentariosYObservacionesCreateInputMessage.setId("comentariosYObservacionesCreateInputMessage");
        comentariosYObservacionesCreateInputMessage.setFor("comentariosYObservacionesCreateInput");
        comentariosYObservacionesCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(comentariosYObservacionesCreateInputMessage);
        
=======
>>>>>>> d5792d9d4574ac035b3fe3896721b6be3153cc01:src/main/java/ar/com/ix/proyectos/web/ProyectoBean_Roo_ManagedBean.aj
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid AuditoriaVirtualBean.populateEditPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
<<<<<<< e9222cde397dd916c096e7da0ff689a1b6ccde96:src/main/java/ar/com/ix/proyectos/web/AuditoriaVirtualBean_Roo_ManagedBean.aj
        OutputLabel clienteEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        clienteEditOutput.setFor("clienteEditInput");
        clienteEditOutput.setId("clienteEditOutput");
        clienteEditOutput.setValue("Cliente:");
        htmlPanelGrid.getChildren().add(clienteEditOutput);
        
        InputText clienteEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        clienteEditInput.setId("clienteEditInput");
        clienteEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.cliente}", String.class));
        clienteEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(clienteEditInput);
        
        Message clienteEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        clienteEditInputMessage.setId("clienteEditInputMessage");
        clienteEditInputMessage.setFor("clienteEditInput");
        clienteEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(clienteEditInputMessage);
        
=======
>>>>>>> d5792d9d4574ac035b3fe3896721b6be3153cc01:src/main/java/ar/com/ix/proyectos/web/ProyectoBean_Roo_ManagedBean.aj
        OutputLabel codigoEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        codigoEditOutput.setFor("codigoEditInput");
        codigoEditOutput.setId("codigoEditOutput");
        codigoEditOutput.setValue("Codigo:");
        htmlPanelGrid.getChildren().add(codigoEditOutput);
        
        InputText codigoEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        codigoEditInput.setId("codigoEditInput");
        codigoEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.codigo}", String.class));
        codigoEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(codigoEditInput);
        
        Message codigoEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        codigoEditInputMessage.setId("codigoEditInputMessage");
        codigoEditInputMessage.setFor("codigoEditInput");
        codigoEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(codigoEditInputMessage);
        
<<<<<<< e9222cde397dd916c096e7da0ff689a1b6ccde96:src/main/java/ar/com/ix/proyectos/web/AuditoriaVirtualBean_Roo_ManagedBean.aj
        OutputLabel fechaDeInicioEstimadaEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        fechaDeInicioEstimadaEditOutput.setFor("fechaDeInicioEstimadaEditInput");
        fechaDeInicioEstimadaEditOutput.setId("fechaDeInicioEstimadaEditOutput");
        fechaDeInicioEstimadaEditOutput.setValue("Fecha De Inicio Estimada:");
        htmlPanelGrid.getChildren().add(fechaDeInicioEstimadaEditOutput);
        
        Calendar fechaDeInicioEstimadaEditInput = (Calendar) application.createComponent(Calendar.COMPONENT_TYPE);
        fechaDeInicioEstimadaEditInput.setId("fechaDeInicioEstimadaEditInput");
        fechaDeInicioEstimadaEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.fechaDeInicioEstimada}", Date.class));
        fechaDeInicioEstimadaEditInput.setNavigator(true);
        fechaDeInicioEstimadaEditInput.setEffect("slideDown");
        fechaDeInicioEstimadaEditInput.setPattern("dd/MM/yyyy");
        fechaDeInicioEstimadaEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(fechaDeInicioEstimadaEditInput);
        
        Message fechaDeInicioEstimadaEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        fechaDeInicioEstimadaEditInputMessage.setId("fechaDeInicioEstimadaEditInputMessage");
        fechaDeInicioEstimadaEditInputMessage.setFor("fechaDeInicioEstimadaEditInput");
        fechaDeInicioEstimadaEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(fechaDeInicioEstimadaEditInputMessage);
        
        OutputLabel fechaDeInicioEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        fechaDeInicioEditOutput.setFor("fechaDeInicioEditInput");
        fechaDeInicioEditOutput.setId("fechaDeInicioEditOutput");
        fechaDeInicioEditOutput.setValue("Fecha De Inicio:");
        htmlPanelGrid.getChildren().add(fechaDeInicioEditOutput);
        
        Calendar fechaDeInicioEditInput = (Calendar) application.createComponent(Calendar.COMPONENT_TYPE);
        fechaDeInicioEditInput.setId("fechaDeInicioEditInput");
        fechaDeInicioEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.fechaDeInicio}", Date.class));
        fechaDeInicioEditInput.setNavigator(true);
        fechaDeInicioEditInput.setEffect("slideDown");
        fechaDeInicioEditInput.setPattern("dd/MM/yyyy");
        fechaDeInicioEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(fechaDeInicioEditInput);
        
        Message fechaDeInicioEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        fechaDeInicioEditInputMessage.setId("fechaDeInicioEditInputMessage");
        fechaDeInicioEditInputMessage.setFor("fechaDeInicioEditInput");
        fechaDeInicioEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(fechaDeInicioEditInputMessage);
        
        OutputLabel fechaDeFinalizacionEstimadaEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        fechaDeFinalizacionEstimadaEditOutput.setFor("fechaDeFinalizacionEstimadaEditInput");
        fechaDeFinalizacionEstimadaEditOutput.setId("fechaDeFinalizacionEstimadaEditOutput");
        fechaDeFinalizacionEstimadaEditOutput.setValue("Fecha De Finalizacion Estimada:");
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionEstimadaEditOutput);
        
        Calendar fechaDeFinalizacionEstimadaEditInput = (Calendar) application.createComponent(Calendar.COMPONENT_TYPE);
        fechaDeFinalizacionEstimadaEditInput.setId("fechaDeFinalizacionEstimadaEditInput");
        fechaDeFinalizacionEstimadaEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.fechaDeFinalizacionEstimada}", Date.class));
        fechaDeFinalizacionEstimadaEditInput.setNavigator(true);
        fechaDeFinalizacionEstimadaEditInput.setEffect("slideDown");
        fechaDeFinalizacionEstimadaEditInput.setPattern("dd/MM/yyyy");
        fechaDeFinalizacionEstimadaEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionEstimadaEditInput);
        
        Message fechaDeFinalizacionEstimadaEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        fechaDeFinalizacionEstimadaEditInputMessage.setId("fechaDeFinalizacionEstimadaEditInputMessage");
        fechaDeFinalizacionEstimadaEditInputMessage.setFor("fechaDeFinalizacionEstimadaEditInput");
        fechaDeFinalizacionEstimadaEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionEstimadaEditInputMessage);
        
        OutputLabel fechaDeFinalizacionEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        fechaDeFinalizacionEditOutput.setFor("fechaDeFinalizacionEditInput");
        fechaDeFinalizacionEditOutput.setId("fechaDeFinalizacionEditOutput");
        fechaDeFinalizacionEditOutput.setValue("Fecha De Finalizacion:");
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionEditOutput);
        
        Calendar fechaDeFinalizacionEditInput = (Calendar) application.createComponent(Calendar.COMPONENT_TYPE);
        fechaDeFinalizacionEditInput.setId("fechaDeFinalizacionEditInput");
        fechaDeFinalizacionEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.fechaDeFinalizacion}", Date.class));
        fechaDeFinalizacionEditInput.setNavigator(true);
        fechaDeFinalizacionEditInput.setEffect("slideDown");
        fechaDeFinalizacionEditInput.setPattern("dd/MM/yyyy");
        fechaDeFinalizacionEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionEditInput);
        
        Message fechaDeFinalizacionEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        fechaDeFinalizacionEditInputMessage.setId("fechaDeFinalizacionEditInputMessage");
        fechaDeFinalizacionEditInputMessage.setFor("fechaDeFinalizacionEditInput");
        fechaDeFinalizacionEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionEditInputMessage);
        
        OutputLabel ingenieriaEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        ingenieriaEditOutput.setFor("ingenieriaEditInput");
        ingenieriaEditOutput.setId("ingenieriaEditOutput");
        ingenieriaEditOutput.setValue("Ingenieria:");
        htmlPanelGrid.getChildren().add(ingenieriaEditOutput);
        
        InputText ingenieriaEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        ingenieriaEditInput.setId("ingenieriaEditInput");
        ingenieriaEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.ingenieria}", String.class));
        ingenieriaEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(ingenieriaEditInput);
        
        Message ingenieriaEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        ingenieriaEditInputMessage.setId("ingenieriaEditInputMessage");
        ingenieriaEditInputMessage.setFor("ingenieriaEditInput");
        ingenieriaEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(ingenieriaEditInputMessage);
        
        OutputLabel cronogramaEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        cronogramaEditOutput.setFor("cronogramaEditInput");
        cronogramaEditOutput.setId("cronogramaEditOutput");
        cronogramaEditOutput.setValue("Cronograma:");
        htmlPanelGrid.getChildren().add(cronogramaEditOutput);
        
        InputText cronogramaEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        cronogramaEditInput.setId("cronogramaEditInput");
        cronogramaEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.cronograma}", String.class));
        cronogramaEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(cronogramaEditInput);
        
        Message cronogramaEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        cronogramaEditInputMessage.setId("cronogramaEditInputMessage");
        cronogramaEditInputMessage.setFor("cronogramaEditInput");
        cronogramaEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(cronogramaEditInputMessage);
        
        OutputLabel informacionRecibidaEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        informacionRecibidaEditOutput.setFor("informacionRecibidaEditInput");
        informacionRecibidaEditOutput.setId("informacionRecibidaEditOutput");
        informacionRecibidaEditOutput.setValue("Informacion Recibida:");
        htmlPanelGrid.getChildren().add(informacionRecibidaEditOutput);
        
        InputText informacionRecibidaEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        informacionRecibidaEditInput.setId("informacionRecibidaEditInput");
        informacionRecibidaEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.informacionRecibida}", String.class));
        informacionRecibidaEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(informacionRecibidaEditInput);
        
        Message informacionRecibidaEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        informacionRecibidaEditInputMessage.setId("informacionRecibidaEditInputMessage");
        informacionRecibidaEditInputMessage.setFor("informacionRecibidaEditInput");
        informacionRecibidaEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(informacionRecibidaEditInputMessage);
        
        OutputLabel auditoriaVirtualEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        auditoriaVirtualEditOutput.setFor("auditoriaVirtualEditInput");
        auditoriaVirtualEditOutput.setId("auditoriaVirtualEditOutput");
        auditoriaVirtualEditOutput.setValue("Auditoria Virtual:");
        htmlPanelGrid.getChildren().add(auditoriaVirtualEditOutput);
        
        InputText auditoriaVirtualEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        auditoriaVirtualEditInput.setId("auditoriaVirtualEditInput");
        auditoriaVirtualEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.auditoriaVirtual}", String.class));
        auditoriaVirtualEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(auditoriaVirtualEditInput);
        
        Message auditoriaVirtualEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        auditoriaVirtualEditInputMessage.setId("auditoriaVirtualEditInputMessage");
        auditoriaVirtualEditInputMessage.setFor("auditoriaVirtualEditInput");
        auditoriaVirtualEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(auditoriaVirtualEditInputMessage);
        
        OutputLabel correccionesDeAuditoriaEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        correccionesDeAuditoriaEditOutput.setFor("correccionesDeAuditoriaEditInput");
        correccionesDeAuditoriaEditOutput.setId("correccionesDeAuditoriaEditOutput");
        correccionesDeAuditoriaEditOutput.setValue("Correcciones De Auditoria:");
        htmlPanelGrid.getChildren().add(correccionesDeAuditoriaEditOutput);
        
        InputText correccionesDeAuditoriaEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        correccionesDeAuditoriaEditInput.setId("correccionesDeAuditoriaEditInput");
        correccionesDeAuditoriaEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.correccionesDeAuditoria}", String.class));
        correccionesDeAuditoriaEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(correccionesDeAuditoriaEditInput);
        
        Message correccionesDeAuditoriaEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        correccionesDeAuditoriaEditInputMessage.setId("correccionesDeAuditoriaEditInputMessage");
        correccionesDeAuditoriaEditInputMessage.setFor("correccionesDeAuditoriaEditInput");
        correccionesDeAuditoriaEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(correccionesDeAuditoriaEditInputMessage);
        
        OutputLabel auditoriaCorregidaEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        auditoriaCorregidaEditOutput.setFor("auditoriaCorregidaEditInput");
        auditoriaCorregidaEditOutput.setId("auditoriaCorregidaEditOutput");
        auditoriaCorregidaEditOutput.setValue("Auditoria Corregida:");
        htmlPanelGrid.getChildren().add(auditoriaCorregidaEditOutput);
        
        InputText auditoriaCorregidaEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        auditoriaCorregidaEditInput.setId("auditoriaCorregidaEditInput");
        auditoriaCorregidaEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.auditoriaCorregida}", String.class));
        auditoriaCorregidaEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(auditoriaCorregidaEditInput);
        
        Message auditoriaCorregidaEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        auditoriaCorregidaEditInputMessage.setId("auditoriaCorregidaEditInputMessage");
        auditoriaCorregidaEditInputMessage.setFor("auditoriaCorregidaEditInput");
        auditoriaCorregidaEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(auditoriaCorregidaEditInputMessage);
        
        OutputLabel comentariosYObservacionesEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        comentariosYObservacionesEditOutput.setFor("comentariosYObservacionesEditInput");
        comentariosYObservacionesEditOutput.setId("comentariosYObservacionesEditOutput");
        comentariosYObservacionesEditOutput.setValue("Comentarios Y Observaciones:");
        htmlPanelGrid.getChildren().add(comentariosYObservacionesEditOutput);
        
        InputText comentariosYObservacionesEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        comentariosYObservacionesEditInput.setId("comentariosYObservacionesEditInput");
        comentariosYObservacionesEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.comentariosYObservaciones}", String.class));
        comentariosYObservacionesEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(comentariosYObservacionesEditInput);
        
        Message comentariosYObservacionesEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        comentariosYObservacionesEditInputMessage.setId("comentariosYObservacionesEditInputMessage");
        comentariosYObservacionesEditInputMessage.setFor("comentariosYObservacionesEditInput");
        comentariosYObservacionesEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(comentariosYObservacionesEditInputMessage);
        
=======
>>>>>>> d5792d9d4574ac035b3fe3896721b6be3153cc01:src/main/java/ar/com/ix/proyectos/web/ProyectoBean_Roo_ManagedBean.aj
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid AuditoriaVirtualBean.populateViewPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
<<<<<<< e9222cde397dd916c096e7da0ff689a1b6ccde96:src/main/java/ar/com/ix/proyectos/web/AuditoriaVirtualBean_Roo_ManagedBean.aj
        HtmlOutputText clienteLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        clienteLabel.setId("clienteLabel");
        clienteLabel.setValue("Cliente:");
        htmlPanelGrid.getChildren().add(clienteLabel);
        
        HtmlOutputText clienteValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        clienteValue.setId("clienteValue");
        clienteValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.cliente}", String.class));
        htmlPanelGrid.getChildren().add(clienteValue);
        
=======
>>>>>>> d5792d9d4574ac035b3fe3896721b6be3153cc01:src/main/java/ar/com/ix/proyectos/web/ProyectoBean_Roo_ManagedBean.aj
        HtmlOutputText codigoLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        codigoLabel.setId("codigoLabel");
        codigoLabel.setValue("Codigo:");
        htmlPanelGrid.getChildren().add(codigoLabel);
        
        HtmlOutputText codigoValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        codigoValue.setId("codigoValue");
        codigoValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.codigo}", String.class));
        htmlPanelGrid.getChildren().add(codigoValue);
        
<<<<<<< e9222cde397dd916c096e7da0ff689a1b6ccde96:src/main/java/ar/com/ix/proyectos/web/AuditoriaVirtualBean_Roo_ManagedBean.aj
        HtmlOutputText fechaDeInicioEstimadaLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        fechaDeInicioEstimadaLabel.setId("fechaDeInicioEstimadaLabel");
        fechaDeInicioEstimadaLabel.setValue("Fecha De Inicio Estimada:");
        htmlPanelGrid.getChildren().add(fechaDeInicioEstimadaLabel);
        
        HtmlOutputText fechaDeInicioEstimadaValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        fechaDeInicioEstimadaValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.fechaDeInicioEstimada}", Date.class));
        DateTimeConverter fechaDeInicioEstimadaValueConverter = (DateTimeConverter) application.createConverter(DateTimeConverter.CONVERTER_ID);
        fechaDeInicioEstimadaValueConverter.setPattern("dd/MM/yyyy");
        fechaDeInicioEstimadaValue.setConverter(fechaDeInicioEstimadaValueConverter);
        htmlPanelGrid.getChildren().add(fechaDeInicioEstimadaValue);
        
        HtmlOutputText fechaDeInicioLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        fechaDeInicioLabel.setId("fechaDeInicioLabel");
        fechaDeInicioLabel.setValue("Fecha De Inicio:");
        htmlPanelGrid.getChildren().add(fechaDeInicioLabel);
        
        HtmlOutputText fechaDeInicioValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        fechaDeInicioValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.fechaDeInicio}", Date.class));
        DateTimeConverter fechaDeInicioValueConverter = (DateTimeConverter) application.createConverter(DateTimeConverter.CONVERTER_ID);
        fechaDeInicioValueConverter.setPattern("dd/MM/yyyy");
        fechaDeInicioValue.setConverter(fechaDeInicioValueConverter);
        htmlPanelGrid.getChildren().add(fechaDeInicioValue);
        
        HtmlOutputText fechaDeFinalizacionEstimadaLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        fechaDeFinalizacionEstimadaLabel.setId("fechaDeFinalizacionEstimadaLabel");
        fechaDeFinalizacionEstimadaLabel.setValue("Fecha De Finalizacion Estimada:");
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionEstimadaLabel);
        
        HtmlOutputText fechaDeFinalizacionEstimadaValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        fechaDeFinalizacionEstimadaValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.fechaDeFinalizacionEstimada}", Date.class));
        DateTimeConverter fechaDeFinalizacionEstimadaValueConverter = (DateTimeConverter) application.createConverter(DateTimeConverter.CONVERTER_ID);
        fechaDeFinalizacionEstimadaValueConverter.setPattern("dd/MM/yyyy");
        fechaDeFinalizacionEstimadaValue.setConverter(fechaDeFinalizacionEstimadaValueConverter);
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionEstimadaValue);
        
        HtmlOutputText fechaDeFinalizacionLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        fechaDeFinalizacionLabel.setId("fechaDeFinalizacionLabel");
        fechaDeFinalizacionLabel.setValue("Fecha De Finalizacion:");
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionLabel);
        
        HtmlOutputText fechaDeFinalizacionValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        fechaDeFinalizacionValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.fechaDeFinalizacion}", Date.class));
        DateTimeConverter fechaDeFinalizacionValueConverter = (DateTimeConverter) application.createConverter(DateTimeConverter.CONVERTER_ID);
        fechaDeFinalizacionValueConverter.setPattern("dd/MM/yyyy");
        fechaDeFinalizacionValue.setConverter(fechaDeFinalizacionValueConverter);
        htmlPanelGrid.getChildren().add(fechaDeFinalizacionValue);
        
        HtmlOutputText ingenieriaLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        ingenieriaLabel.setId("ingenieriaLabel");
        ingenieriaLabel.setValue("Ingenieria:");
        htmlPanelGrid.getChildren().add(ingenieriaLabel);
        
        HtmlOutputText ingenieriaValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        ingenieriaValue.setId("ingenieriaValue");
        ingenieriaValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.ingenieria}", String.class));
        htmlPanelGrid.getChildren().add(ingenieriaValue);
        
        HtmlOutputText cronogramaLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        cronogramaLabel.setId("cronogramaLabel");
        cronogramaLabel.setValue("Cronograma:");
        htmlPanelGrid.getChildren().add(cronogramaLabel);
        
        HtmlOutputText cronogramaValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        cronogramaValue.setId("cronogramaValue");
        cronogramaValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.cronograma}", String.class));
        htmlPanelGrid.getChildren().add(cronogramaValue);
        
        HtmlOutputText informacionRecibidaLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        informacionRecibidaLabel.setId("informacionRecibidaLabel");
        informacionRecibidaLabel.setValue("Informacion Recibida:");
        htmlPanelGrid.getChildren().add(informacionRecibidaLabel);
        
        HtmlOutputText informacionRecibidaValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        informacionRecibidaValue.setId("informacionRecibidaValue");
        informacionRecibidaValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.informacionRecibida}", String.class));
        htmlPanelGrid.getChildren().add(informacionRecibidaValue);
        
        HtmlOutputText auditoriaVirtualLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        auditoriaVirtualLabel.setId("auditoriaVirtualLabel");
        auditoriaVirtualLabel.setValue("Auditoria Virtual:");
        htmlPanelGrid.getChildren().add(auditoriaVirtualLabel);
        
        HtmlOutputText auditoriaVirtualValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        auditoriaVirtualValue.setId("auditoriaVirtualValue");
        auditoriaVirtualValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.auditoriaVirtual}", String.class));
        htmlPanelGrid.getChildren().add(auditoriaVirtualValue);
        
        HtmlOutputText correccionesDeAuditoriaLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        correccionesDeAuditoriaLabel.setId("correccionesDeAuditoriaLabel");
        correccionesDeAuditoriaLabel.setValue("Correcciones De Auditoria:");
        htmlPanelGrid.getChildren().add(correccionesDeAuditoriaLabel);
        
        HtmlOutputText correccionesDeAuditoriaValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        correccionesDeAuditoriaValue.setId("correccionesDeAuditoriaValue");
        correccionesDeAuditoriaValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.correccionesDeAuditoria}", String.class));
        htmlPanelGrid.getChildren().add(correccionesDeAuditoriaValue);
        
        HtmlOutputText auditoriaCorregidaLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        auditoriaCorregidaLabel.setId("auditoriaCorregidaLabel");
        auditoriaCorregidaLabel.setValue("Auditoria Corregida:");
        htmlPanelGrid.getChildren().add(auditoriaCorregidaLabel);
        
        HtmlOutputText auditoriaCorregidaValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        auditoriaCorregidaValue.setId("auditoriaCorregidaValue");
        auditoriaCorregidaValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.auditoriaCorregida}", String.class));
        htmlPanelGrid.getChildren().add(auditoriaCorregidaValue);
        
        HtmlOutputText comentariosYObservacionesLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        comentariosYObservacionesLabel.setId("comentariosYObservacionesLabel");
        comentariosYObservacionesLabel.setValue("Comentarios Y Observaciones:");
        htmlPanelGrid.getChildren().add(comentariosYObservacionesLabel);
        
        HtmlOutputText comentariosYObservacionesValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        comentariosYObservacionesValue.setId("comentariosYObservacionesValue");
        comentariosYObservacionesValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{auditoriaVirtualBean.auditoriaVirtual.comentariosYObservaciones}", String.class));
        htmlPanelGrid.getChildren().add(comentariosYObservacionesValue);
        
=======
>>>>>>> d5792d9d4574ac035b3fe3896721b6be3153cc01:src/main/java/ar/com/ix/proyectos/web/ProyectoBean_Roo_ManagedBean.aj
        return htmlPanelGrid;
    }
    
    public AuditoriaVirtual AuditoriaVirtualBean.getAuditoriaVirtual() {
        if (auditoriaVirtual == null) {
            auditoriaVirtual = new AuditoriaVirtual();
        }
        return auditoriaVirtual;
    }
    
    public void AuditoriaVirtualBean.setAuditoriaVirtual(AuditoriaVirtual auditoriaVirtual) {
        this.auditoriaVirtual = auditoriaVirtual;
    }
    
    public String AuditoriaVirtualBean.onEdit() {
        return null;
    }
    
    public boolean AuditoriaVirtualBean.isCreateDialogVisible() {
        return createDialogVisible;
    }
    
    public void AuditoriaVirtualBean.setCreateDialogVisible(boolean createDialogVisible) {
        this.createDialogVisible = createDialogVisible;
    }
    
    public String AuditoriaVirtualBean.displayList() {
        createDialogVisible = false;
        findAllAuditoriaVirtuals();
        return "auditoriaVirtual";
    }
    
    public String AuditoriaVirtualBean.displayCreateDialog() {
        auditoriaVirtual = new AuditoriaVirtual();
        createDialogVisible = true;
        return "auditoriaVirtual";
    }
    
    public String AuditoriaVirtualBean.persist() {
        String message = "";
        if (auditoriaVirtual.getId() != null) {
            auditoriaVirtual.merge();
            message = "message_successfully_updated";
        } else {
            auditoriaVirtual.persist();
            message = "message_successfully_created";
        }
        RequestContext context = RequestContext.getCurrentInstance();
        context.execute("createDialogWidget.hide()");
        context.execute("editDialogWidget.hide()");
        
        FacesMessage facesMessage = MessageFactory.getMessage(message, "AuditoriaVirtual");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllAuditoriaVirtuals();
    }
    
    public String AuditoriaVirtualBean.delete() {
        auditoriaVirtual.remove();
        FacesMessage facesMessage = MessageFactory.getMessage("message_successfully_deleted", "AuditoriaVirtual");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllAuditoriaVirtuals();
    }
    
    public void AuditoriaVirtualBean.reset() {
        auditoriaVirtual = null;
        createDialogVisible = false;
    }
    
    public void AuditoriaVirtualBean.handleDialogClose(CloseEvent event) {
        reset();
    }
    
}
