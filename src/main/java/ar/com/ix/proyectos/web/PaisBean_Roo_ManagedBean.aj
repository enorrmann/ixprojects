// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.com.ix.proyectos.web;

import ar.com.ix.proyectos.model.Pais;
import ar.com.ix.proyectos.web.PaisBean;
import ar.com.ix.proyectos.web.util.MessageFactory;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.html.HtmlOutputText;
import javax.faces.component.html.HtmlPanelGrid;
import javax.faces.context.FacesContext;
import org.primefaces.component.inputtext.InputText;
import org.primefaces.component.message.Message;
import org.primefaces.component.outputlabel.OutputLabel;
import org.primefaces.context.RequestContext;
import org.primefaces.event.CloseEvent;

privileged aspect PaisBean_Roo_ManagedBean {
    
    declare @type: PaisBean: @ManagedBean(name = "paisBean");
    
    declare @type: PaisBean: @SessionScoped;
    
    private String PaisBean.name = "Paises";
    
    private Pais PaisBean.pais;
    
    private List<Pais> PaisBean.allPaises;
    
    private boolean PaisBean.dataVisible = false;
    
    private List<String> PaisBean.columns;
    
    private HtmlPanelGrid PaisBean.createPanelGrid;
    
    private HtmlPanelGrid PaisBean.editPanelGrid;
    
    private HtmlPanelGrid PaisBean.viewPanelGrid;
    
    private boolean PaisBean.createDialogVisible = false;
    
    @PostConstruct
    public void PaisBean.init() {
        columns = new ArrayList<String>();
        columns.add("nombre");
    }
    
    public String PaisBean.getName() {
        return name;
    }
    
    public List<String> PaisBean.getColumns() {
        return columns;
    }
    
    public List<Pais> PaisBean.getAllPaises() {
        return allPaises;
    }
    
    public void PaisBean.setAllPaises(List<Pais> allPaises) {
        this.allPaises = allPaises;
    }
    
    public String PaisBean.findAllPaises() {
        allPaises = Pais.findAllPaises();
        dataVisible = !allPaises.isEmpty();
        return null;
    }
    
    public boolean PaisBean.isDataVisible() {
        return dataVisible;
    }
    
    public void PaisBean.setDataVisible(boolean dataVisible) {
        this.dataVisible = dataVisible;
    }
    
    public HtmlPanelGrid PaisBean.getCreatePanelGrid() {
        if (createPanelGrid == null) {
            createPanelGrid = populateCreatePanel();
        }
        return createPanelGrid;
    }
    
    public void PaisBean.setCreatePanelGrid(HtmlPanelGrid createPanelGrid) {
        this.createPanelGrid = createPanelGrid;
    }
    
    public HtmlPanelGrid PaisBean.getEditPanelGrid() {
        if (editPanelGrid == null) {
            editPanelGrid = populateEditPanel();
        }
        return editPanelGrid;
    }
    
    public void PaisBean.setEditPanelGrid(HtmlPanelGrid editPanelGrid) {
        this.editPanelGrid = editPanelGrid;
    }
    
    public HtmlPanelGrid PaisBean.getViewPanelGrid() {
        return populateViewPanel();
    }
    
    public void PaisBean.setViewPanelGrid(HtmlPanelGrid viewPanelGrid) {
        this.viewPanelGrid = viewPanelGrid;
    }
    
    public HtmlPanelGrid PaisBean.populateCreatePanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        OutputLabel nombreCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        nombreCreateOutput.setFor("nombreCreateInput");
        nombreCreateOutput.setId("nombreCreateOutput");
        nombreCreateOutput.setValue("Nombre:");
        htmlPanelGrid.getChildren().add(nombreCreateOutput);
        
        InputText nombreCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        nombreCreateInput.setId("nombreCreateInput");
        nombreCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{paisBean.pais.nombre}", String.class));
        nombreCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(nombreCreateInput);
        
        Message nombreCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        nombreCreateInputMessage.setId("nombreCreateInputMessage");
        nombreCreateInputMessage.setFor("nombreCreateInput");
        nombreCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(nombreCreateInputMessage);
        
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid PaisBean.populateEditPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        OutputLabel nombreEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        nombreEditOutput.setFor("nombreEditInput");
        nombreEditOutput.setId("nombreEditOutput");
        nombreEditOutput.setValue("Nombre:");
        htmlPanelGrid.getChildren().add(nombreEditOutput);
        
        InputText nombreEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        nombreEditInput.setId("nombreEditInput");
        nombreEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{paisBean.pais.nombre}", String.class));
        nombreEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(nombreEditInput);
        
        Message nombreEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        nombreEditInputMessage.setId("nombreEditInputMessage");
        nombreEditInputMessage.setFor("nombreEditInput");
        nombreEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(nombreEditInputMessage);
        
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid PaisBean.populateViewPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        HtmlOutputText nombreLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        nombreLabel.setId("nombreLabel");
        nombreLabel.setValue("Nombre:");
        htmlPanelGrid.getChildren().add(nombreLabel);
        
        HtmlOutputText nombreValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        nombreValue.setId("nombreValue");
        nombreValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{paisBean.pais.nombre}", String.class));
        htmlPanelGrid.getChildren().add(nombreValue);
        
        return htmlPanelGrid;
    }
    
    public Pais PaisBean.getPais() {
        if (pais == null) {
            pais = new Pais();
        }
        return pais;
    }
    
    public void PaisBean.setPais(Pais pais) {
        this.pais = pais;
    }
    
    public String PaisBean.onEdit() {
        return null;
    }
    
    public boolean PaisBean.isCreateDialogVisible() {
        return createDialogVisible;
    }
    
    public void PaisBean.setCreateDialogVisible(boolean createDialogVisible) {
        this.createDialogVisible = createDialogVisible;
    }
    
    public String PaisBean.displayList() {
        createDialogVisible = false;
        findAllPaises();
        return "pais";
    }
    
    public String PaisBean.displayCreateDialog() {
        pais = new Pais();
        createDialogVisible = true;
        return "pais";
    }
    
    public String PaisBean.persist() {
        String message = "";
        if (pais.getId() != null) {
            pais.merge();
            message = "message_successfully_updated";
        } else {
            pais.persist();
            message = "message_successfully_created";
        }
        RequestContext context = RequestContext.getCurrentInstance();
        context.execute("createDialogWidget.hide()");
        context.execute("editDialogWidget.hide()");
        
        FacesMessage facesMessage = MessageFactory.getMessage(message, "Pais");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllPaises();
    }
    
    public String PaisBean.delete() {
        pais.remove();
        FacesMessage facesMessage = MessageFactory.getMessage("message_successfully_deleted", "Pais");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllPaises();
    }
    
    public void PaisBean.reset() {
        pais = null;
        createDialogVisible = false;
    }
    
    public void PaisBean.handleDialogClose(CloseEvent event) {
        reset();
    }
    
}
