// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.com.ix.proyectos.web;

import ar.com.ix.proyectos.model.Proyecto;
import ar.com.ix.proyectos.web.ProyectoBean;
import ar.com.ix.proyectos.web.util.MessageFactory;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.html.HtmlOutputText;
import javax.faces.component.html.HtmlPanelGrid;
import javax.faces.context.FacesContext;
import org.primefaces.component.inputtext.InputText;
import org.primefaces.component.message.Message;
import org.primefaces.component.outputlabel.OutputLabel;
import org.primefaces.context.RequestContext;
import org.primefaces.event.CloseEvent;

privileged aspect ProyectoBean_Roo_ManagedBean {
    
    declare @type: ProyectoBean: @ManagedBean(name = "proyectoBean");
    
    declare @type: ProyectoBean: @SessionScoped;
    
    private String ProyectoBean.name = "Proyectoes";
    
    private Proyecto ProyectoBean.proyecto;
    
    private List<Proyecto> ProyectoBean.allProyectoes;
    
    private boolean ProyectoBean.dataVisible = false;
    
    private List<String> ProyectoBean.columns;
    
    private HtmlPanelGrid ProyectoBean.createPanelGrid;
    
    private HtmlPanelGrid ProyectoBean.editPanelGrid;
    
    private HtmlPanelGrid ProyectoBean.viewPanelGrid;
    
    private boolean ProyectoBean.createDialogVisible = false;
    
    @PostConstruct
    public void ProyectoBean.init() {
        columns = new ArrayList<String>();
        columns.add("codigo");
    }
    
    public String ProyectoBean.getName() {
        return name;
    }
    
    public List<String> ProyectoBean.getColumns() {
        return columns;
    }
    
    public List<Proyecto> ProyectoBean.getAllProyectoes() {
        return allProyectoes;
    }
    
    public void ProyectoBean.setAllProyectoes(List<Proyecto> allProyectoes) {
        this.allProyectoes = allProyectoes;
    }
    
    public String ProyectoBean.findAllProyectoes() {
        allProyectoes = Proyecto.findAllProyectoes();
        dataVisible = !allProyectoes.isEmpty();
        return null;
    }
    
    public boolean ProyectoBean.isDataVisible() {
        return dataVisible;
    }
    
    public void ProyectoBean.setDataVisible(boolean dataVisible) {
        this.dataVisible = dataVisible;
    }
    
    public HtmlPanelGrid ProyectoBean.getCreatePanelGrid() {
        if (createPanelGrid == null) {
            createPanelGrid = populateCreatePanel();
        }
        return createPanelGrid;
    }
    
    public void ProyectoBean.setCreatePanelGrid(HtmlPanelGrid createPanelGrid) {
        this.createPanelGrid = createPanelGrid;
    }
    
    public HtmlPanelGrid ProyectoBean.getEditPanelGrid() {
        if (editPanelGrid == null) {
            editPanelGrid = populateEditPanel();
        }
        return editPanelGrid;
    }
    
    public void ProyectoBean.setEditPanelGrid(HtmlPanelGrid editPanelGrid) {
        this.editPanelGrid = editPanelGrid;
    }
    
    public HtmlPanelGrid ProyectoBean.getViewPanelGrid() {
        return populateViewPanel();
    }
    
    public void ProyectoBean.setViewPanelGrid(HtmlPanelGrid viewPanelGrid) {
        this.viewPanelGrid = viewPanelGrid;
    }
    
    public HtmlPanelGrid ProyectoBean.populateCreatePanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        OutputLabel codigoCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        codigoCreateOutput.setFor("codigoCreateInput");
        codigoCreateOutput.setId("codigoCreateOutput");
        codigoCreateOutput.setValue("Codigo:");
        htmlPanelGrid.getChildren().add(codigoCreateOutput);
        
        InputText codigoCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        codigoCreateInput.setId("codigoCreateInput");
        codigoCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{proyectoBean.proyecto.codigo}", String.class));
        codigoCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(codigoCreateInput);
        
        Message codigoCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        codigoCreateInputMessage.setId("codigoCreateInputMessage");
        codigoCreateInputMessage.setFor("codigoCreateInput");
        codigoCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(codigoCreateInputMessage);
        
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid ProyectoBean.populateEditPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        OutputLabel codigoEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        codigoEditOutput.setFor("codigoEditInput");
        codigoEditOutput.setId("codigoEditOutput");
        codigoEditOutput.setValue("Codigo:");
        htmlPanelGrid.getChildren().add(codigoEditOutput);
        
        InputText codigoEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        codigoEditInput.setId("codigoEditInput");
        codigoEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{proyectoBean.proyecto.codigo}", String.class));
        codigoEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(codigoEditInput);
        
        Message codigoEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        codigoEditInputMessage.setId("codigoEditInputMessage");
        codigoEditInputMessage.setFor("codigoEditInput");
        codigoEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(codigoEditInputMessage);
        
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid ProyectoBean.populateViewPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        HtmlOutputText codigoLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        codigoLabel.setId("codigoLabel");
        codigoLabel.setValue("Codigo:");
        htmlPanelGrid.getChildren().add(codigoLabel);
        
        HtmlOutputText codigoValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        codigoValue.setId("codigoValue");
        codigoValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{proyectoBean.proyecto.codigo}", String.class));
        htmlPanelGrid.getChildren().add(codigoValue);
        
        return htmlPanelGrid;
    }
    
    public Proyecto ProyectoBean.getProyecto() {
        if (proyecto == null) {
            proyecto = new Proyecto();
        }
        return proyecto;
    }
    
    public void ProyectoBean.setProyecto(Proyecto proyecto) {
        this.proyecto = proyecto;
    }
    
    public String ProyectoBean.onEdit() {
        return null;
    }
    
    public boolean ProyectoBean.isCreateDialogVisible() {
        return createDialogVisible;
    }
    
    public void ProyectoBean.setCreateDialogVisible(boolean createDialogVisible) {
        this.createDialogVisible = createDialogVisible;
    }
    
    public String ProyectoBean.displayList() {
        createDialogVisible = false;
        findAllProyectoes();
        return "proyecto";
    }
    
    public String ProyectoBean.displayCreateDialog() {
        proyecto = new Proyecto();
        createDialogVisible = true;
        return "proyecto";
    }
    
    public String ProyectoBean.persist() {
        String message = "";
        if (proyecto.getId() != null) {
            proyecto.merge();
            message = "message_successfully_updated";
        } else {
            proyecto.persist();
            message = "message_successfully_created";
        }
        RequestContext context = RequestContext.getCurrentInstance();
        context.execute("createDialogWidget.hide()");
        context.execute("editDialogWidget.hide()");
        
        FacesMessage facesMessage = MessageFactory.getMessage(message, "Proyecto");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllProyectoes();
    }
    
    public String ProyectoBean.delete() {
        proyecto.remove();
        FacesMessage facesMessage = MessageFactory.getMessage("message_successfully_deleted", "Proyecto");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllProyectoes();
    }
    
    public void ProyectoBean.reset() {
        proyecto = null;
        createDialogVisible = false;
    }
    
    public void ProyectoBean.handleDialogClose(CloseEvent event) {
        reset();
    }
    
}
